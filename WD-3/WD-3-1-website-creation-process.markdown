# Процесс создания сайта. 10 простых шагов.
## Шаг 1. Изучить бриф (краткая анкета) и тематику будущего сайта
   > Бриф - перечень вопросов, помогающий понять, что нужно Вам от дизайнера. Дизайнер на первом этапе проекта не имеет никакой информации о Вашем предприятии или продукте. Бриф позволяет сэкономить время, четко понять как клиенту так и дизайнеру цели проекта и избежать ошибок.

так же изучить сайты конкурентов, написать техническое задание ТЗ. Возможно, что ТЗ вам предоставят.

**Ссылки:**
* [Behance](https://www.behance.net)
* [Awwwards](https://www.awwwards.com/)
* [Dribbble](https://dribbble.com/)

   Вдохновление по лендингам:
* [Lapa.ninja](https://www.lapa.ninja/)
* [Landbook](https://land-book.com/)

   Вдохновление по сайт шаблонам:
   [ThemeForest](https://themeforest.net/top-sellers)


## Шаг 2. Составить карту сайта

Карта сайта — это визуальная или текстовая модель содержимого вебсайта, которая позволяет пользователям перемещаться по сайту, чтобы найти интересующую их информацию. Так же как и традиционная географическая карта помогает людям найти места, которые они ищут в реальном мире. Карта сайта является своего рода интерактивной таблицей контента, в которой каждый перечисленный элемент ведет непосредственно к его аналогочиному разделу сайта.

Пример:

![Sitemap](images/2019/03/sitemap.png)

**Ссылки на инструменты:**

* [MindMeister mind maps](https://www.mindmeister.com/)
* [Lucidchart diagrams](https://www.lucidchart.com)
* [Create diagrams and sitemap](https://www.draw.io/)


## Шаг 3. Создание вайрфрейма
Вайрфрейм — инструмент визуализации для представления предлагаемых функций, структуры и содержания вебстраницы или вебсайта. Вайрфрейм, или каркас, отделяет графические элементы вебсайта от функциональных элементов таким образом, чтобы веб разработчик мог легко объяснить, как пользователи будут взаимодействовать с сайтом.

Он чётко должен показывать:
* **Что?**  
Основные группы содержимого.
*  **Где?**  
Информационную структуру.
* **Как?**  
Описание взаимодействия пользователя с интерфейсом и его примерную визуализацию.

**Мокап**  
Мокап — это средне или высоко детализированное статичное представление дизайна. Очень часто мокап — это черновик дизайна или даже фактический дизайн-макет.  
Хороший мокап:
* Представляет информационную структуру, визуализирует контент и демонстрирует базовую функциональность в статике;
* Поощряет оценку визуальной стороны проекта.
> Мокапы часто путают с вайрфреймами из-за названий таких программ как Mockingbird, Mockup Builder, Balsamiq Mockups.


**Ссылки на инструменты:**

* [Balsamiq](https://balsamiq.com/)
* [UXPin](https://www.uxpin.com/)
* [MockFlow](https://www.mockflow.com/)
* [Moqups](https://moqups.com/)
* [Axure](https://www.axure.com/)


Пример:

![wireframe](images/2019/03/wireframe.png)

##Шаг 4. Подбор цветовой палитры, шрифтов, изображений и видео

Цвет широко используется в дизайне, — он позволяет «оживить» содержание — создать смысловую связь элементов, наполнить работу эмоциями и настроением.

**Ссылки по подбору цветовой палитры:**

* [Color Wheel](https://color.adobe.com/create/color-wheel/)
* [Flat UI Color Picker](http://www.flatuicolorpicker.com/all)
* [Material.io color tool](https://material.io/tools/color/)
* [Material Colors](https://www.materialui.co/colors)

Проводите ли вы редизайн сайта или создаете инфографику, вам нужно сочетание шрифтов , которое выглядит профессионально, безупречно, и при этом не отвлекает внимание от контента. И, как правило, шрифты нужны срочно.

В ответ на этот запрос были созданы бесплатные сервисы, быстро и эффективно помогающие подобрать идеальное сочетание.

**Ссылки по подбору шрифтов:**
* [Google fonts](https://fonts.google.com/)
* [FontSquirrel](https://www.fontsquirrel.com/)
* [MyFonts](https://www.myfonts.com/)
* [Type Io](http://typ.io/)
* [Canva Font Combinations](https://www.canva.com/font-combinations/)
* [Подбор шрифта по скриншоту](https://www.myfonts.com/WhatTheFont/)

**Ссылки по подбору изображений:**
* [Unsplash](https://unsplash.com/)
* [Pixabay](https://pixabay.com/)
* [Gratisography](https://gratisography.com/)
* [FreePik](https://www.freepik.com/)
* [Plixs](https://plixs.com/)
* [Free stock photos](https://www.pexels.com/)

## Шаг 5. Разработка макета главной страницы сайта

Создание главной страницы (Index page) — важный процесс, который включает в себя работу над дизайном, юзабилити, текстом, логотипом, навигацией и многим другим. Здесь важно учитывать и интересы целевой аудитории, и актуальность информационного наполнения, и даже особенности цветового оформления. В данной статье вы узнаете: как оформить главную страницу, что на ней отобразить, зачем нужны те или иные элементы, и где их лучше расположить.

Наполнение главной страницы непосредственно зависит от направленности сайта (продажа товаров, предоставление услуг, раскрутка бренда, блог, изложение информации и т. д.).

Проектирование главной страницы сайта производится с использованием заранее подготовленных ресурсов (техническое задание, карта сайта, вайрфреймы и т.д.). Обсудить концептуальный макет/ы с менеджером или командой, выполнить правки и только потом этот дизайн будет отправлен клиенту на утверждение.

**Инструменты:**
* Photoshop
* Sketch
* Illustrator
* Figma

Пример:
![Index page](images/2019/03/index-page.png)

##Шаг 6. Создание наборов пользовательского интерфейса UI (UI kit, UI set)
UI наборы — файлы, как правило PSD с большим количеством полезных компонентов - элементов пользовательского интерфейса, использующихся для его проектирования. Содержат большое количество цветовых вариаций, и легко интегрируются с вашей собственной конструкцией, так как они сделаны для этого. Они так же могут включать в себя шаблоны, кисти, ASL файлы (файлы стилей), которые упрощают и ускоряют процесс интеграции. Вы можете играть с цветами, создавать новые компоненты и просто включать их в качестве смарт-объектов в свой собственный дизайн.

**Инструменты:**
* Photoshop
* Sketch
* Illustrator
* Figma

Пример:
![ui-kit](images/2019/03/ui-kit.png)

## Шаг 7. Дизайн внутренних страниц сайта
Внутренние страницы сайта должны в первую очередь предоставлять запрашиваемую информацию и только затем следовать общему стилю и художественным изыскам. Можно составить иерархию, разложить по значимости информацию на внутренних страницах сайта. На мой взгляд, это может выглядеть примерно так:
* Название или логотип сайт (обозначает на каком сайте находится пользователь)
* Навигация по всем разделам первого уровня
* Название раздела, в котором находится пользователь
* Сама информация (контент) - тексты, иллюстрации и т.п.
* Общий дизайн, стилевое единство (иногда этим можно поступиться в пользу функциональности и не использовать некоторые элементы, присутствующие на главной странице)
* Художественные изыски, выделяющие страницу на фоне других, или какие-то мультимедийные "навороты" (анимация, инфографики и пр).

**Инструменты:**
* Photoshop
* Sketch
* Illustrator
* Figma

## Шаг 8. Выбор анимаций и ховеров
Дизайн пользовательского интерфейса с анимацией и переходами – это отличный способ
улучшить опыт взаимодействия пользователя с продуктом (UX). Анимированные микропереходы помогают стимулировать пользователя к действиям, в эпоху очень
короткой устойчивости внимания людей. Поэтому Airbnb недавно представил [Lottie](https://airbnb.design/lottie/) – новый open-source инструмент для простого добавления анимации в родные приложения. Проекты вроде [Lottie](https://airbnb.design/lottie/) показывают растущую важность добавления движений, это новый элемент создания улучшенных UX для приложений и вебсайтов. В этом уроке вы научитесь эффективным приемам UI-анимации с помощью Principle для Mac. После того, как вы пройдете это руководство, вы сможете превратить скучные статичные макеты в интерактивный прототип, с помощью которого вы сможете удачнее презентовать свою работу клиентам и будущим пользователям. Вы можете применять полученные знания для усовершенствования своих будущих интерфейсов.

**Инструменты**
* [Adobe After Effects](https://www.adobe.com/ua/products/aftereffects/free-trial-download.html)
* [Principle for Mac](https://principleformac.com/)
* [Mokup for Windows](https://mokup.app/)

**Ссылки**
* [Codepen](https://codepen.io/search/pens?q=animation)
* [Tympanus demos](https://tympanus.net/codrops/category/playground/)
* [Animate Css](https://daneden.github.io/animate.css/)

## Шаг 9. Создание прототипов
Прототип — живая модель изготовленная "в ручную", которая представляет собой легко воспроизводимый продукт, достаточный для дизайнера, что бы визуализировать и тестировать дизайн.

**Инструменты**
* [Adobe XD](https://www.adobe.com/ua/products/xd.html)
* [Invisionapp](https://www.invisionapp.com/tour/website-mobile-prototyping-tool)
* [Marvelapp](https://marvelapp.com/)

**Ссылки**
* [Invisionapp - бесплатные ресурсы](https://www.invisionapp.com/inside-design/design-resources/now/)
* [Пример 1](https://projects.invisionapp.com/share/9XEIUP73P#/screens/)
* [Пример 2](https://projects.invisionapp.com/share/KP64LKKD7#/screens/)
* [Пример 3](https://projects.invisionapp.com/share/DX7E29RS7#/screens/)
* [Adobe XD - бесплатные ресурсы](https://www.xdguru.com/adobe-xd-ui-kits/)

#ТЕПЕРЬ, ДИЗАЙН ГОТОВ ПРЕВРАТИТЬСЯ В РЕАЛЬНЫЙ ВЕБСАЙТ!

# Эпилог
### Зачем?
* Если вы знаете как делать сайт, этот метод поможет вам убедить заказчика, почему вы предлагаете ему именно этот вариант.
* Если вы заказываете сайт, то сэкономите от 2 до 10 часов объяснений что вам нужно и зачем.
* Если вы стартапер, то вся ваша команда сможет участвовать в создании нового сайта или лэндинга. Тот самый случай, когда одна голова хорошо, а команда лучше.

### Что нужно?
* Бизнес-задачи сайта, какую задачу решает сайт и где он находится в цепочке бизнес-процессов;
* Технические возможности сайта, формы, личного кабинета и т.д.;
* Кто является основной целевой аудиторией сайта: пол, возраст, интересы и т.д.;
* Какую информацию нужно донести до потенциального клиента;
* Цель каждой страницы сайта, что должен делать потенциальный клиент на данной странице и алгоритм взаимодействия с элементами страницы;

### Как?
* Очень важно при разработке прототипа прописать и показать цель каждой страницы и алгоритм взаимодействия пользователя.
* Делая прототип мы определяем какие блоки должны влиять на принятие решения пользователем
* В результате техническое задание превращается в логичную систему, которую можно увидеть и на начальной стадии внести необходимые правки и дополнения
